

--- INPUT | variable = input("Enter your input: ")  ---------------------------------------------------------------
name = input("Enter your name: ") 
print("hello, " + name)
# run script
Enter your name: (user enters name)
Hello, John

--- INPUT w/ EXPRESSION | eval(variable)  ---------------------------------------------------------------
>>> my_number = input('Please Enter a Number: \n')
Please Enter a Number:Â 
123 + 1
>>> print(my_number)
123 + 1
>>> eval(my_number)
124

--- Continue Input w/ while loops | cont = "y"---------------------------------------------------------------
def to_seconds (hours, minutes, seconds): 
    return hours*3600+minutes*60+seconds
print("Welcome to this time converter")

cont = "y"
while(cont.lower() == "y"):
    hours = int(input("Enter the number of hours: "))
    minutes = int(input("Enter the number of minutes: ")) 
    seconds = int(input("Enter the number of seconds: "))
    print("That's {} seconds". format (to_seconds (hours, minutes, seconds))) print()
    cont = input("Do you want to do another conversion? [y to continue] ")
print("Good bye!")

#Run script
./seconds.py
Welcome to this time converter 
Enter the number of hours: 1 
Enter the number of minutes: 2 
Enter the number of seconds: 3 
That's 3723 seconds
Do you want to do another conversion? [y to continue]

--- WORKING IN LINUX BASH  ---------------------------------------------------------------
--- GET ENVIRONMENTAL VARIABLES IN BASH | in shell -> "env" ---------------------------------------------------------------
--- GET PATH | echo $PATH ---------------------------------------------------------------
--- ACCESS VARIABLE | USE $ ---------------------------------------------------------------

--- sample of bash retrieving BASH variables (These are global) ---------------------------------------------------------------
print("HOME: " + os.environ.get("HOME", "")) 
print("SHELL: " + os.environ.get("SHELL", ""))
print("SHELL: " + os.environ.get("FRUIT", ""))
#Result
HOME: /home/user
SHELL: /bin/bash
FRUIT: 
--- To assign variable (if initialized by previously) ---------------------------------------------------------------
export FRUIT=Pineapple
#Result
HOME: /home/user
SHELL: /bin/bash
FRUIT: Pineapple

--- check last exit code on your bash command | echo $? ---------------------------------------------------------------
--- Check for lines - words - Chars in file | wc <file.py> ---------------------------------------------------------------

--- RUNNING SYSTEM COMMANDS ON PYTHON CODE | import subprocess | subprocess.run(["command", "optional flag"])---------------------------------------------------------------
import subprocess

subprocess.run(["sleep", "2"])
#RESULT
CompletedProcess (args=['sleep', '2'], returncode=0)

--- CAPTURE OUTPUT INTO VARIABLE ---------------------------------------------------------------
result = subprocess.run(["host", "8.8.8.8"], capture_output=True)
print(result.returncode)
0

print(result.stdout)
b'8.8.8.8.in-addr.arpa domain name pointer dns.google.\n'

print(result.stdout.decode().split())
['8.8.8.8.in-addr.arpa', 'domain', 'name', 'pointer', 'dns.google.']

result = subprocess.run(["rm", "does_not_exist"], capture_output=True)
print(result.returncode)
1
print(result.stdout)
b''
print(result.stderr)
b"rm: cannot remove 'does_not_exist': No such file or directory\n"

--- Set a variable for path properly by copying, then add the new directory to the copied path variable ---------------------------------------------------------------
import os
import subprocess

my_env = os.environ.copy()

my_env["PATH"] = os.pathsep.join(["/opt/myapp/", my_env["PATH"]])

result = subprocess.run(["myapp"], env=my_env)

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------

---  ---------------------------------------------------------------